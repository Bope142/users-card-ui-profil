//https://random-data-api.com/documentation
const colorList = ['bg-1', 'bg-2', 'bg-3', 'bg-4', 'bg-5', 'bg-6', 'bg-7', 'bg-8']

let itemIndex = 0
const getIndexArrayColor = (itemIndexCurrent) => {
    if (itemIndexCurrent >= 7) {
        itemIndex = 0

        return itemIndex
    } else {
        itemIndex++

        return itemIndex
    }
}
const renderUserCard = (name, skill, avatar, contry, email, birthday, city, color) => {
    return `       <div class="member__card ${color}">
                <div class="profil">
                    <div class="contry__member">
                        <div class="others__infos">
                            <span class="infos">
                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48">
                                    <path d="M18.166016 4.0039062C17.022828 3.9681406 15.879688 4.3255 14.960938 5.03125C13.732938 5.97125 13 7.455 13 9L13 26L16.5 26C20.635 26 24 29.365 24 33.5L24 42.5C24 43.039 23.866437 43.544 23.648438 44L34.5 44C35.328 44 36 43.328 36 42.5L36 12.5C36 10.244 34.479781 8.257875 32.300781 7.671875L19.300781 4.171875C18.928531 4.070875 18.547078 4.0158281 18.166016 4.0039062 z M 20 12.998047L22 12.998047C22.552 12.998047 23 13.446047 23 13.998047L23 15.998047C23 16.550047 22.552 16.998047 22 16.998047L20 16.998047C19.448 16.998047 19 16.550047 19 15.998047L19 13.998047C19 13.446047 19.448 12.998047 20 12.998047 z M 27 12.998047L29 12.998047C29.552 12.998047 30 13.446047 30 13.998047L30 15.998047C30 16.550047 29.552 16.998047 29 16.998047L27 16.998047C26.448 16.998047 26 16.550047 26 15.998047L26 13.998047C26 13.446047 26.448 12.998047 27 12.998047 z M 20 19.998047L22 19.998047C22.552 19.998047 23 20.446047 23 20.998047L23 22.998047C23 23.550047 22.552 23.998047 22 23.998047L20 23.998047C19.448 23.998047 19 23.550047 19 22.998047L19 20.998047C19 20.446047 19.448 19.998047 20 19.998047 z M 27 19.998047L29 19.998047C29.552 19.998047 30 20.446047 30 20.998047L30 22.998047C30 23.550047 29.552 23.998047 29 23.998047L27 23.998047C26.448 23.998047 26 23.550047 26 22.998047L26 20.998047C26 20.446047 26.448 19.998047 27 19.998047 z M 38 20L38 27L40 27C40.552 27 41 27.448 41 28L41 30C41 30.552 40.552 31 40 31L38 31L38 34L40 34C40.552 34 41 34.448 41 35L41 37C41 37.552 40.552 38 40 38L38 38L38 44L43.5 44C44.328 44 45 43.328 45 42.5L45 25.5C45 22.475 42.525 20 39.5 20L38 20 z M 27 26.998047L29 26.998047C29.552 26.998047 30 27.446047 30 27.998047L30 29.998047C30 30.550047 29.552 30.998047 29 30.998047L27 30.998047C26.448 30.998047 26 30.550047 26 29.998047L26 27.998047C26 27.446047 26.448 26.998047 27 26.998047 z M 8.5 28C5.475 28 3 30.475 3 33.5L3 42.5C3 43.328 3.672 44 4.5 44L20.5 44C21.328 44 22 43.328 22 42.5L22 33.5C22 30.475 19.525 28 16.5 28L8.5 28 z M 27 33.998047L29 33.998047C29.323 33.998047 29.596297 34.161437 29.779297 34.398438L29.800781 34.398438L29.800781 34.429688C29.917781 34.593688 30 34.782047 30 34.998047L30 36.998047C30 37.214047 29.917781 37.405359 29.800781 37.568359L29.800781 37.599609L29.779297 37.599609C29.596297 37.836609 29.322 37.998047 29 37.998047L27 37.998047C26.448 37.998047 26 37.550047 26 36.998047L26 34.998047C26 34.446047 26.448 33.998047 27 33.998047 z M 8 34L10 34C10.552 34 11 34.448 11 35L11 37C11 37.552 10.552 38 10 38L8 38C7.448 38 7 37.552 7 37L7 35C7 34.448 7.448 34 8 34 z M 15 34L17 34C17.552 34 18 34.448 18 35L18 37C18 37.552 17.552 38 17 38L15 38C14.448 38 14 37.552 14 37L14 35C14 34.448 14.448 34 15 34 z" fill="#FFFFFF" />
                                </svg>
                                <span class="infos-title">${city}</span>
                            </span>
                            <span class="infos">
                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48">
                                    <path d="M24 4C12.972 4 4 12.972 4 24C4 35.028 12.972 44 24 44C35.028 44 44 35.028 44 24C44 12.972 35.028 4 24 4 z M 24 10C31.72 10 38 16.28 38 24L38 25.5C38 28.532 35.533 31 32.5 31C30.737 31 29.167156 30.161187 28.160156 28.867188C26.978156 30.179188 25.328 31 23.5 31C19.916 31 17 27.859 17 24C17 20.141 19.916 17 23.5 17C24.809 17 26.026828 17.422578 27.048828 18.142578C27.209828 17.488578 27.795 17 28.5 17C29.329 17 30 17.672 30 18.5L30 25.5C30 26.879 31.122 28 32.5 28C33.878 28 35 26.879 35 25.5L35 24C35 17.935 30.065 13 24 13C17.935 13 13 17.935 13 24C13 30.065 17.935 35 24 35C25.331 35 26.632234 34.765734 27.865234 34.302734C28.638234 34.009734 29.506875 34.405641 29.796875 35.181641C30.087875 35.956641 29.694922 36.820328 28.919922 37.111328C27.347922 37.700328 25.692 38 24 38C16.28 38 10 31.72 10 24C10 16.28 16.28 10 24 10 z M 23.5 20 A 3.5 4 0 0 0 23.5 28 A 3.5 4 0 0 0 23.5 20 z" fill="#FFFFFF" />
                                </svg>
                                <span class="infos-title">${email}</span>
                            </span>
                            <span class="infos">
                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48">
                                    <path d="M33.974 29.144L18.857 14.026c-.851-.851-2.062-1.205-3.238-.941-1.176.262-2.122 1.095-2.53 2.228l-10 27.678c-.197.547-.061 1.159.351 1.57C3.726 44.847 4.109 45 4.5 45c.171 0 .344-.029.51-.089l27.677-10c1.134-.408 1.967-1.354 2.229-2.53C35.178 31.205 34.825 29.994 33.974 29.144zM42.62 9.62c-1.64 1.64-3.22 1.77-4.5 1.88-1.06.08-1.76.14-2.62 1s-.92 1.56-1.01 2.62c-.1 1.28-.23 2.86-1.87 4.5-1.15 1.15-2.27 1.56-3.27 1.73l-2.69-2.69c.43-.09.84-.12 1.22-.15 1.06-.09 1.76-.15 2.62-1.01s.92-1.56 1-2.62c.11-1.27.24-2.86 1.88-4.5 1.64-1.64 3.22-1.77 4.5-1.87 1.06-.09 1.76-.15 2.62-1.01.59-.59 1.54-.59 2.12 0C43.21 8.08 43.21 9.04 42.62 9.62zM23.4 15.4l-2.14-2.14c2.05-2.9 2.2-5.49.83-9.25-.28-.78.12-1.64.9-1.92.78-.28 1.64.12 1.92.9C26.69 7.9 26.32 11.52 23.4 15.4zM45.91 25c-.28.77-1.15 1.18-1.92.89-3.78-1.37-6.36-1.22-9.26.84l-2.14-2.14c3.89-2.93 7.51-3.3 12.42-1.52C45.79 23.36 46.19 24.22 45.91 25zM30.108 7.631l-.739-.739c-.493-.493-.493-1.291 0-1.784l.739-.739c.493-.493 1.291-.493 1.784 0l.739.739c.493.493.493 1.291 0 1.784l-.739.739C31.399 8.123 30.601 8.123 30.108 7.631zM8.108 15.131l-.739-.739c-.493-.493-.493-1.291 0-1.784l.739-.739c.493-.493 1.291-.493 1.784 0l.739.739c.493.493.493 1.291 0 1.784l-.739.739C9.399 15.623 8.601 15.623 8.108 15.131zM39.108 19.631l-.739-.739c-.493-.493-.493-1.291 0-1.784l.739-.739c.493-.493 1.291-.493 1.784 0l.739.739c.493.493.493 1.291 0 1.784l-.739.739C40.399 20.123 39.601 20.123 39.108 19.631zM39.108 32.631l-.739-.739c-.493-.493-.493-1.291 0-1.784l.739-.739c.493-.493 1.291-.493 1.784 0l.739.739c.493.493.493 1.291 0 1.784l-.739.739C40.399 33.123 39.601 33.123 39.108 32.631zM36.108 39.631l-.739-.739c-.493-.493-.493-1.291 0-1.784l.739-.739c.493-.493 1.291-.493 1.784 0l.739.739c.493.493.493 1.291 0 1.784l-.739.739C37.399 40.123 36.601 40.123 36.108 39.631zM14.108 10.631l-.739-.739c-.493-.493-.493-1.291 0-1.784l.739-.739c.493-.493 1.291-.493 1.784 0l.739.739c.493.493.493 1.291 0 1.784l-.739.739C15.399 11.123 14.601 11.123 14.108 10.631z" fill="#FFFFFF" />
                                </svg>
                                <span class="infos-title">${birthday}</span>
                            </span>
                        </div>
                        United States
                    </div>
                    <img src="${avatar}" alt="">
                </div>
                <div class="details">
                    <span class="name_member">
                        ${name}
                    </span>
                    <span class="skill_member">${skill}</span>
                </div>
            </div>
    
`
}
async function getRandomUser() {
    let url = 'https://random-data-api.com/api/v2/users?size=32';
    try {
        let res = await fetch(url);
        let data = await res.json();
        if (data.length > 0) {
            document.querySelector('.container__members').innerHTML = ''
            data.forEach((user, index) => {
                document.querySelector('.container__members').innerHTML += renderUserCard(user.first_name + ' ' + user.last_name, user.employment.title, user.avatar, user.address.country, user.email, user.date_of_birth, user.address.city, colorList[getIndexArrayColor(itemIndex)])
                if (index === 15) {
                    document.querySelector('.loading-page').style.display = 'none'
                }
            })
        }
    } catch (error) {
        console.log(error);
    }
}
window.addEventListener('load', () => {
    getRandomUser()

})
